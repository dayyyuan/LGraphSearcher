package edu.psu.chemxseer.structure.supersearch.Test;

import edu.psu.chemxseer.structure.setcover.newExps.ADWINTracer;
import edu.psu.chemxseer.structure.setcover.newExps.ADWINTracer.MonitorType;

public class ADWINTester {
	public static void main(String[] args) {
		// double[] data = new double[2400];
		// double[] pattern1 = new double[]{1, 1.1,0.9,0.8,1.2,1.3, 0.8, 0.9,1,
		// 0.8};
		// double[] pattern2 = new double[]{12,12.5, 12.6, 12.3, 12.4, 12.3,
		// 12.5,12.6, 12.7, 12.5};
		// int index = 0;
		//
		// for(int w= 0; w< 3; w++){
		// for(int i = 0; i< 40; i++)
		// for(double p1: pattern1)
		// data[index++] = p1/10;
		//
		// for(int i = 0; i< 40; i++)
		// for(double p2: pattern2)
		// data[index++] = p2/10;
		// }
		double[] data = new double[] { 6825, 6803, 7135, 7862, 8509, 8474,
				8745, 8279, 8795, 8727, 9663, 10254, 9767, 10971, 9727, 10096,
				10940, 9911, 11152, 10495, 9411, 12032, 9533, 6936, 8280,
				11834, 4231, 6357, 5527, 5338, 6434, 5436, 8358, 10333, 11635,
				6351, 6969, 4493, 4796, 5807, 6172, 5677, 5240, 5340, 5321,
				5150, 5486, 5439, 5396, 5492, 5524, 5623, 5579, 5543, 5507,
				5478, 5446, 5393, 5401, 5405, 5424, 5354, 5343, 5266, 5376,
				5674, 5510, 5867, 7831, 6276, 8015, 8283, 9955, 9540, 9670,
				7925, 7927, 6834, 7356, 5638, 4078, 3876, 5103, 4446, 6102,
				4950, 5821, 5539, 5383, 5391, 5320, 5342, 5462, 5539, 5594,
				6503, 5707, 5672, 5698, 5708, 111121, 132740, 101099, 112171,
				115227, 96925, 99326, 111257, 106349, 97285, 115533, 131451,
				137101, 121225, 171276, 148136, 114536, 113473, 173957, 204636,
				118208, 112230, 93219, 114032, 114938, 99799, 101804, 113845,
				120535, 93977, 108576, 150599, 112851, 114384, 167567, 175132,
				111878, 112151, 140157, 207844, 155456, 119219, 101997, 116380,
				112127, 90969, 98160, 117740, 119134, 99751, 97063, 129107,
				95799, 116157, 139662, 140938, 155612, 116463, 160494, 168652,
				154851, 128583, 110180, 101407, 104850, 95113, 96430, 111808,
				126062, 106174, 99243, 136447, 122463, 120084, 152061, 134473,
				155577, 113623, 111650, 200815, 168368, 136666, 117011, 104148,
				112853, 117717, 97244, 99341, 111876, 108711, 101881, 105495,
				114835, 132285, 162265, 143872, 153091, 109952, 108012, 196088,
				5693, 5079, 5686, 5713, 5683, 5697, 5692, 5626, 5724, 5703,
				5700, 5724, 5769, 5911, 5942, 5878, 5820, 5751, 5749, 5813,
				5778, 5728, 5740, 5762, 5731, 5720, 5720, 5732, 5724, 5776,
				5728, 5766, 5686, 5676, 5672, 5770, 5856, 5690, 5518, 5970,
				5891, 5825, 5854, 12385, 6766, 6105, 5913, 10751, 9748, 11244,
				9503, 9179, 5976, 9162, 6057, 8547, 5575, 6067, 9123, 4286,
				7825, 5813, 14747, 5394, 5702, 7019, 5899, 6037, 6212, 6291,
				6367, 6342, 6305, 6289, 6326, 6280, 6340, 6359, 6397, 6291,
				6336, 6309, 6349, 6341, 6314, 6349, 6312, 7247, 10214, 10122,
				10251, 13887, 16710, 18830, 12200, 14723, 27180, 15951, 20139,
				34408, 193199, 147737, 110134, 105550, 109960, 123204, 102887,
				101607, 129101, 118736, 91706, 106289, 120653, 122495, 135195,
				196737, 153542, 104107, 118334, 163499, 158868, 149723, 134842,
				100615, 118428, 133328, 103094, 101939, 103077, 129141, 89386,
				103711, 133159, 113844, 122398, 180111, 177712, 116414, 115283,
				159149, 155498, 172274, 112943, 111652, 109807, 131302, 110280,
				93759, 110423, 100872, 116633, 98644, 115296, 119502, 110497,
				106951, 172373, 147273, 111914, 107437, 189310, 176217, 121711,
				121285, 100721, 123122, 124896, 103789, 100757, 127753, 91851,
				92099, 127395, 105954, 123253, 142102, 158357, 149923, 115477,
				114430, 161224, 188497, 124899, 115018, 108631, 116013, 102991,
				100533, 102459, 106433, 94785, 125335, 121880, 118568, 143851,
				166229, 113475, 118509, 174910 };
		System.out.println(data.length);
		ADWINTracer adwin = new ADWINTracer(0.01, MonitorType.test);
		int preLength = 0;
		for (int i = 0; i < data.length; i++) {
			adwin.insertValue(new float[] { (float) data[i] });
			preLength++;
			if (adwin.needToUpdate()) {
				int oriLength = adwin.getLength();
				adwin.shrinkWindowSize();
				System.out.println("Detect One Shift at index " + i + " "
						+ data[i] + "with Left over " + adwin.getLength()
						+ " detected break point " + (i - adwin.getLength()));
			}

		}
	}
}
